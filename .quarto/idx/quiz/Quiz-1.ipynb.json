{"title":"**Quiz-1 (2024.09.05)** // 범위: 파이썬기본문법","markdown":{"yaml":{"title":"**Quiz-1 (2024.09.05)** // 범위: 파이썬기본문법","author":"최규빈","date":"09/05/2024"},"headingText":"1. 10점","containsRefs":false,"markdown":"\n\n<a href=\"https://colab.research.google.com/github/guebin/MP2024/blob/main/quiz/Quiz-1.ipynb\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" style=\"text-align: left\"></a>\n\n| **항목**               | **허용 여부**        | **비고**                                          |\n|------------------------|----------------------|---------------------------------------------------|\n| **강의노트 참고**      | 허용                 | 수업 중 제공된 강의노트나 본인이 정리한 자료를 참고 가능       |\n| **구글 검색**          | 허용                 | 인터넷을 통한 자료 검색 및 정보 확인 가능        |\n| **생성 모형 사용**           | 허용 안함            | 인공지능 기반 도구(GPT 등) 사용 불가            |\n\n::: {.callout-caution}\n\n- 모든 문항은 부분점수 없음. \n- 일부문항은 부분문제를 모두 맞출경우만 정답으로 인정함. \n- `.ipynb` 파일 형태로 LMS에 제출된 답안지만 채점하며 그 외의 형식 (`.hwp`등)은 채점하지 않음. 즉 0점 처리함. **제출방법 모르면 물어볼것!**\n\n:::\n\n\n> 공지사항: (1) 부정행위 적발시 F학점 처리. 부정행위는 판단하는 기준은 교수주관임. (2) 지연제출은 별다른 감점이 없을 예정. 지속적인 지연제출은 감점 대상이 댈 수 있음. (3) 지각역시 별다른 패널티가 없을 예정이나 반복적인 지각은 지양할 것. (4) 모든 퀴즈를 응시하더라도 성적미달시 F가 나올 수 있음. \n\n\n아래의 코드를 관찰하고 올바르게 해석한 학생을 모두 골라라. \n\n> 올바르게 해석한 학생을 모두 정확하게 맞출경우만 20점으로 인정하고 그 외의는 0점 처리함\n\n`민수`: 데코레이터는 함수 결과를 두 배로 만들어 반환하므로 add2(4, 4)의 결과는 8 * 2 = 16이다. 출력 결과는 16이다.\n\n`선철`: add(-2, 2) 와 add2(-2, 2)의 출력결과는 같다. \n\n`예지`: 데코레이터는 매개변수(=함수의 입력값)를 두 배로 해서 함수에 전달한다. 그래서 add2(4, 4)는 (4 * 2) + (4 * 2)가 되어 출력 결과는 16이다.\n\n`준현`: 데코레이터는 add2 함수의 입력값을 곱해서 리턴하도록 동작한다. 따라서 add2(4, 4)의 결과는 (4 * 4) = 16 이 출력된다. \n\n`(풀이)`\n\n답: 민수, 선철\n\n# 2. 10점 \n\n아래의 코드를 관찰하고 올바르게 해석한 학생을 모두 골라라. \n\n> 올바르게 해석한 학생을 모두 정확하게 맞출경우만 20점으로 인정하고 그 외의는 0점 처리함\n\n`토르`: infinite_sequence()는 무한 루프를 돌며 num 값을 하나씩 yield로 반환하고, next()로 값을 호출할 때마다 그 값을 증가시킨다. 따라서 이 코드는 (0, 1, 2, 3, 4)를 순서대로 출력한다. \n\n`캡틴`: infinite_sequence()는 5개의 값을 반환한 후 더 이상 값을 생성하지 않고 종료된다. 즉, 그 이후에 next(gen)을 호출하면 더 이상 값이 반환되지 않고 StopIteration 예외가 발생한다. \n\n`위도우`: `gen`은 호출가능한 객체 (`callable object`) 이다. \n\n`헐크`: 이 코드에서 추가로 아래의 코드를 실행하면 \n\n```Python\nfor _ in range(10):\n    print(next(gen))\n```\n\n다음 10개의 값(5, 6, 7, 8, 9, 10, 11, 12, 13, 14)이 순서대로 출력된다. \n\n`(풀이)`\n\n답: 토르, 헐크 \n\n# 3. 20점\n\n아래의 코드를 관찰하고 올바르게 해석한 학생을 모두 골라라. \n\n> 올바르게 해석한 학생을 모두 정확하게 맞출경우만 20점으로 인정하고 그 외의는 0점 처리함\n\n`민지`: Dummy4 인스턴스를 생성할 때 `super(Dummy2, self).__init__(a)`가 호출되어, MRO에 따라 먼저 Dummy3의 `__init__` 메소드가 실행된다. 그 후 Dummy4의 `__init__` 에서 `self.a = self.a + 3` 이 실행된다.\n\n`시혁`: Dummy4 인스턴스를 생성할 때 `super(Dummy2, self).__init__(a)`가 호출되면 Dummy2의 `__init__`이 실행된다. 그 후 Dummy4의 `__init__` 에서 `self.a = self.a + 3` 이 실행된다.\n\n`희진`: Dummy4는 다중 상속을 받았으므로 Dummy2, 3의 `__init__`이 모두 실행된다. 그 후 Dummy4의 `__init__` 에서 `self.a = self.a + 3` 이 실행된다.\n\n`팜하니`: Dummy4는 다중 상속을 사용하므로 Dummy, Dummy2, Dummy3 의 `__init__` 순서대로 모두 호출한다. 그리고 마지막으로 Dummy4의 `__init__` 에서 `self.a = self.a + 3` 이 실행된다.\n\n`(풀이)`\n\n답: 모두 틀렸음\n\n# 4. 20점\n\n아래의 코드를 관찰하고 올바르게 해석한 학생을 모두 골라라. \n\n> 올바르게 해석한 학생을 모두 정확하게 맞출경우만 20점으로 인정하고 그 외의는 0점 처리함\n\n`동용`: `load_dataset`은 `function` 클래스에서 생성된 인스턴스이다. \n\n`태한`: `imdb` 는 `__len__` 메소드를 가지고 있다. 따라서 `len(imdb)` 는 실행가능한 코드임을 알 수 있다. \n\n`대영`: `imdb['train']`, `imdb['test']` 역시 모두 `__len__` 메소드를 가지고 있다. 그리고 `len(imdb['train']) + len(imdb['test'])` 의 값은 `len(imbd)`의 값과 같다. \n\n`현수`: `imdb['train']`는 `__iter__` 메소드를 가지고 있다. 따라서 아래의 코드가 실행가능하다. \n\n```Python\niterator = iter(imdb['train'])\nprint(next(iterator))\nprint(next(iterator))\n```\n\n`(풀이)`\n\n답: 동용, 태한, 현수 \n\n> 채점시 동용과 대영은 틀려도 봐줬습니다. 동용은 개념이 약하면 헷갈릴 수 있다고 생각했고, 대영은 본의아니게 낚시처럼 문제가 되어서요, 실수할수 있다고 생각했습니다.\n\n# 5. 40점\n\n주어진 `load_dataset()` 함수의 도움말에 대한 설명을 보고, 설명이 맞으면 O, 틀리면 X를 선택하라.\n\n> 모두 맞출 경우만 정답으로 인정\n\n```Python\nload_dataset?\n```\n\n```Python\nSignature:\nload_dataset(\n    path: str,\n    name: Optional[str] = None,\n    data_dir: Optional[str] = None,\n    data_files: Union[str, Sequence[str], Mapping[str, Union[str, Sequence[str]]], NoneType] = None,\n    split: Union[str, datasets.splits.Split, NoneType] = None,\n    cache_dir: Optional[str] = None,\n    features: Optional[datasets.features.features.Features] = None,\n    download_config: Optional[datasets.download.download_config.DownloadConfig] = None,\n    download_mode: Union[datasets.download.download_manager.DownloadMode, str, NoneType] = None,\n    verification_mode: Union[datasets.utils.info_utils.VerificationMode, str, NoneType] = None,\n    ignore_verifications='deprecated',\n    keep_in_memory: Optional[bool] = None,\n    save_infos: bool = False,\n    revision: Union[str, datasets.utils.version.Version, NoneType] = None,\n    token: Union[bool, str, NoneType] = None,\n    use_auth_token='deprecated',\n    task='deprecated',\n    streaming: bool = False,\n    num_proc: Optional[int] = None,\n    storage_options: Optional[Dict] = None,\n    trust_remote_code: bool = None,\n    **config_kwargs,\n) -> Union[datasets.dataset_dict.DatasetDict, datasets.arrow_dataset.Dataset, datasets.dataset_dict.IterableDatasetDict, datasets.iterable_dataset.IterableDataset]\nDocstring:\n여기서 부터는 너무 기니까 생략~\n```\n\n`1` `path`는 위치 인자로 전달될 수 있다.  \n\n`2`. `name` 인자는 함수 호출 시 키워드 인자로 전달될 수 있으며, 기본값은 `None`이다.  \n\n`3`. `load_dataset()` 함수는 가변 위치 인자를 허용하지 않는다. \n\n`4`. `config_kwargs`는 가변 키워드 인자이며, 추가적인 키워드 인자를 받기 위한 것이다.  \n\n`5`. `path`의 타입 힌트는 `str`이다. 하지만 이것이`path` 인자의 값을 문자열 값만 전달될 수 있다는 의미는 아니다. Python에서 타입 힌트는 강제적인 제약이 아니라 개발자에게 코드의 의도를 알리기 위한 도구일 뿐이다. 따라서 Python에서는 타입 힌트를 무시하고 다른 타입의 값을 전달할 수 있다.\n\n`6`. `split` 인자의 타입 힌트는 `Union[str, datasets.splits.Split, NoneType]`이므로, 문자열(str), datasets.Split 객체, 또는 **None**의 형태를 입력으로 권장한다.\n\n`7`. `download_config` 인자는 가변 키워드 인자로 전달된다.  \n\n`8`. `data_dir`은 위치 인자로도 전달될 수 있다.  \n\n`9`. `cache_dir` 인자의 타입 힌트는 `Optional[str]`이므로, 문자열(str) 또는 **None**의 형태를 입력으로 권장한다.\n\n`10`. `**config_kwargs`는 함수 호출 시 몇 개의 키워드 인자를 받을 수 있는지 미리 알 필요가 없다.  \n\n`(풀이)`\n\n7만 틀렸음. \n\n> 8번은 헷갈릴만 해서 틀려도 봐줬습니다. 8번이외에 한개정도 더 실수한 건 만점드렸습니다. \n","srcMarkdownNoYaml":"\n\n<a href=\"https://colab.research.google.com/github/guebin/MP2024/blob/main/quiz/Quiz-1.ipynb\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" style=\"text-align: left\"></a>\n\n| **항목**               | **허용 여부**        | **비고**                                          |\n|------------------------|----------------------|---------------------------------------------------|\n| **강의노트 참고**      | 허용                 | 수업 중 제공된 강의노트나 본인이 정리한 자료를 참고 가능       |\n| **구글 검색**          | 허용                 | 인터넷을 통한 자료 검색 및 정보 확인 가능        |\n| **생성 모형 사용**           | 허용 안함            | 인공지능 기반 도구(GPT 등) 사용 불가            |\n\n::: {.callout-caution}\n\n- 모든 문항은 부분점수 없음. \n- 일부문항은 부분문제를 모두 맞출경우만 정답으로 인정함. \n- `.ipynb` 파일 형태로 LMS에 제출된 답안지만 채점하며 그 외의 형식 (`.hwp`등)은 채점하지 않음. 즉 0점 처리함. **제출방법 모르면 물어볼것!**\n\n:::\n\n\n> 공지사항: (1) 부정행위 적발시 F학점 처리. 부정행위는 판단하는 기준은 교수주관임. (2) 지연제출은 별다른 감점이 없을 예정. 지속적인 지연제출은 감점 대상이 댈 수 있음. (3) 지각역시 별다른 패널티가 없을 예정이나 반복적인 지각은 지양할 것. (4) 모든 퀴즈를 응시하더라도 성적미달시 F가 나올 수 있음. \n\n# 1. 10점\n\n아래의 코드를 관찰하고 올바르게 해석한 학생을 모두 골라라. \n\n> 올바르게 해석한 학생을 모두 정확하게 맞출경우만 20점으로 인정하고 그 외의는 0점 처리함\n\n`민수`: 데코레이터는 함수 결과를 두 배로 만들어 반환하므로 add2(4, 4)의 결과는 8 * 2 = 16이다. 출력 결과는 16이다.\n\n`선철`: add(-2, 2) 와 add2(-2, 2)의 출력결과는 같다. \n\n`예지`: 데코레이터는 매개변수(=함수의 입력값)를 두 배로 해서 함수에 전달한다. 그래서 add2(4, 4)는 (4 * 2) + (4 * 2)가 되어 출력 결과는 16이다.\n\n`준현`: 데코레이터는 add2 함수의 입력값을 곱해서 리턴하도록 동작한다. 따라서 add2(4, 4)의 결과는 (4 * 4) = 16 이 출력된다. \n\n`(풀이)`\n\n답: 민수, 선철\n\n# 2. 10점 \n\n아래의 코드를 관찰하고 올바르게 해석한 학생을 모두 골라라. \n\n> 올바르게 해석한 학생을 모두 정확하게 맞출경우만 20점으로 인정하고 그 외의는 0점 처리함\n\n`토르`: infinite_sequence()는 무한 루프를 돌며 num 값을 하나씩 yield로 반환하고, next()로 값을 호출할 때마다 그 값을 증가시킨다. 따라서 이 코드는 (0, 1, 2, 3, 4)를 순서대로 출력한다. \n\n`캡틴`: infinite_sequence()는 5개의 값을 반환한 후 더 이상 값을 생성하지 않고 종료된다. 즉, 그 이후에 next(gen)을 호출하면 더 이상 값이 반환되지 않고 StopIteration 예외가 발생한다. \n\n`위도우`: `gen`은 호출가능한 객체 (`callable object`) 이다. \n\n`헐크`: 이 코드에서 추가로 아래의 코드를 실행하면 \n\n```Python\nfor _ in range(10):\n    print(next(gen))\n```\n\n다음 10개의 값(5, 6, 7, 8, 9, 10, 11, 12, 13, 14)이 순서대로 출력된다. \n\n`(풀이)`\n\n답: 토르, 헐크 \n\n# 3. 20점\n\n아래의 코드를 관찰하고 올바르게 해석한 학생을 모두 골라라. \n\n> 올바르게 해석한 학생을 모두 정확하게 맞출경우만 20점으로 인정하고 그 외의는 0점 처리함\n\n`민지`: Dummy4 인스턴스를 생성할 때 `super(Dummy2, self).__init__(a)`가 호출되어, MRO에 따라 먼저 Dummy3의 `__init__` 메소드가 실행된다. 그 후 Dummy4의 `__init__` 에서 `self.a = self.a + 3` 이 실행된다.\n\n`시혁`: Dummy4 인스턴스를 생성할 때 `super(Dummy2, self).__init__(a)`가 호출되면 Dummy2의 `__init__`이 실행된다. 그 후 Dummy4의 `__init__` 에서 `self.a = self.a + 3` 이 실행된다.\n\n`희진`: Dummy4는 다중 상속을 받았으므로 Dummy2, 3의 `__init__`이 모두 실행된다. 그 후 Dummy4의 `__init__` 에서 `self.a = self.a + 3` 이 실행된다.\n\n`팜하니`: Dummy4는 다중 상속을 사용하므로 Dummy, Dummy2, Dummy3 의 `__init__` 순서대로 모두 호출한다. 그리고 마지막으로 Dummy4의 `__init__` 에서 `self.a = self.a + 3` 이 실행된다.\n\n`(풀이)`\n\n답: 모두 틀렸음\n\n# 4. 20점\n\n아래의 코드를 관찰하고 올바르게 해석한 학생을 모두 골라라. \n\n> 올바르게 해석한 학생을 모두 정확하게 맞출경우만 20점으로 인정하고 그 외의는 0점 처리함\n\n`동용`: `load_dataset`은 `function` 클래스에서 생성된 인스턴스이다. \n\n`태한`: `imdb` 는 `__len__` 메소드를 가지고 있다. 따라서 `len(imdb)` 는 실행가능한 코드임을 알 수 있다. \n\n`대영`: `imdb['train']`, `imdb['test']` 역시 모두 `__len__` 메소드를 가지고 있다. 그리고 `len(imdb['train']) + len(imdb['test'])` 의 값은 `len(imbd)`의 값과 같다. \n\n`현수`: `imdb['train']`는 `__iter__` 메소드를 가지고 있다. 따라서 아래의 코드가 실행가능하다. \n\n```Python\niterator = iter(imdb['train'])\nprint(next(iterator))\nprint(next(iterator))\n```\n\n`(풀이)`\n\n답: 동용, 태한, 현수 \n\n> 채점시 동용과 대영은 틀려도 봐줬습니다. 동용은 개념이 약하면 헷갈릴 수 있다고 생각했고, 대영은 본의아니게 낚시처럼 문제가 되어서요, 실수할수 있다고 생각했습니다.\n\n# 5. 40점\n\n주어진 `load_dataset()` 함수의 도움말에 대한 설명을 보고, 설명이 맞으면 O, 틀리면 X를 선택하라.\n\n> 모두 맞출 경우만 정답으로 인정\n\n```Python\nload_dataset?\n```\n\n```Python\nSignature:\nload_dataset(\n    path: str,\n    name: Optional[str] = None,\n    data_dir: Optional[str] = None,\n    data_files: Union[str, Sequence[str], Mapping[str, Union[str, Sequence[str]]], NoneType] = None,\n    split: Union[str, datasets.splits.Split, NoneType] = None,\n    cache_dir: Optional[str] = None,\n    features: Optional[datasets.features.features.Features] = None,\n    download_config: Optional[datasets.download.download_config.DownloadConfig] = None,\n    download_mode: Union[datasets.download.download_manager.DownloadMode, str, NoneType] = None,\n    verification_mode: Union[datasets.utils.info_utils.VerificationMode, str, NoneType] = None,\n    ignore_verifications='deprecated',\n    keep_in_memory: Optional[bool] = None,\n    save_infos: bool = False,\n    revision: Union[str, datasets.utils.version.Version, NoneType] = None,\n    token: Union[bool, str, NoneType] = None,\n    use_auth_token='deprecated',\n    task='deprecated',\n    streaming: bool = False,\n    num_proc: Optional[int] = None,\n    storage_options: Optional[Dict] = None,\n    trust_remote_code: bool = None,\n    **config_kwargs,\n) -> Union[datasets.dataset_dict.DatasetDict, datasets.arrow_dataset.Dataset, datasets.dataset_dict.IterableDatasetDict, datasets.iterable_dataset.IterableDataset]\nDocstring:\n여기서 부터는 너무 기니까 생략~\n```\n\n`1` `path`는 위치 인자로 전달될 수 있다.  \n\n`2`. `name` 인자는 함수 호출 시 키워드 인자로 전달될 수 있으며, 기본값은 `None`이다.  \n\n`3`. `load_dataset()` 함수는 가변 위치 인자를 허용하지 않는다. \n\n`4`. `config_kwargs`는 가변 키워드 인자이며, 추가적인 키워드 인자를 받기 위한 것이다.  \n\n`5`. `path`의 타입 힌트는 `str`이다. 하지만 이것이`path` 인자의 값을 문자열 값만 전달될 수 있다는 의미는 아니다. Python에서 타입 힌트는 강제적인 제약이 아니라 개발자에게 코드의 의도를 알리기 위한 도구일 뿐이다. 따라서 Python에서는 타입 힌트를 무시하고 다른 타입의 값을 전달할 수 있다.\n\n`6`. `split` 인자의 타입 힌트는 `Union[str, datasets.splits.Split, NoneType]`이므로, 문자열(str), datasets.Split 객체, 또는 **None**의 형태를 입력으로 권장한다.\n\n`7`. `download_config` 인자는 가변 키워드 인자로 전달된다.  \n\n`8`. `data_dir`은 위치 인자로도 전달될 수 있다.  \n\n`9`. `cache_dir` 인자의 타입 힌트는 `Optional[str]`이므로, 문자열(str) 또는 **None**의 형태를 입력으로 권장한다.\n\n`10`. `**config_kwargs`는 함수 호출 시 몇 개의 키워드 인자를 받을 수 있는지 미리 알 필요가 없다.  \n\n`(풀이)`\n\n7만 틀렸음. \n\n> 8번은 헷갈릴만 해서 틀려도 봐줬습니다. 8번이외에 한개정도 더 실수한 건 만점드렸습니다. \n"},"formats":{"html":{"identifier":{"display-name":"HTML","target-format":"html","base-format":"html"},"execute":{"fig-width":7,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":null,"freeze":false,"echo":true,"output":true,"warning":true,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":false,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"ipynb-shell-interactivity":null,"plotly-connected":true,"engine":"jupyter"},"render":{"keep-tex":false,"keep-typ":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":"none","code-overflow":"scroll","code-link":false,"code-line-numbers":false,"code-tools":false,"tbl-colwidths":"auto","merge-includes":true,"inline-includes":false,"preserve-yaml":false,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-min-runs":1,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[],"notebook-links":true},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","css":["../styles.css"],"output-file":"Quiz-1.html"},"language":{"toc-title-document":"Table of contents","toc-title-website":"On this page","related-formats-title":"Other Formats","related-notebooks-title":"Notebooks","source-notebooks-prefix":"Source","other-links-title":"Other Links","code-links-title":"Code Links","launch-dev-container-title":"Launch Dev Container","launch-binder-title":"Launch Binder","article-notebook-label":"Article Notebook","notebook-preview-download":"Download Notebook","notebook-preview-download-src":"Download Source","notebook-preview-back":"Back to Article","manuscript-meca-bundle":"MECA Bundle","section-title-abstract":"Abstract","section-title-appendices":"Appendices","section-title-footnotes":"Footnotes","section-title-references":"References","section-title-reuse":"Reuse","section-title-copyright":"Copyright","section-title-citation":"Citation","appendix-attribution-cite-as":"For attribution, please cite this work as:","appendix-attribution-bibtex":"BibTeX citation:","title-block-author-single":"Author","title-block-author-plural":"Authors","title-block-affiliation-single":"Affiliation","title-block-affiliation-plural":"Affiliations","title-block-published":"Published","title-block-modified":"Modified","title-block-keywords":"Keywords","callout-tip-title":"Tip","callout-note-title":"Note","callout-warning-title":"Warning","callout-important-title":"Important","callout-caution-title":"Caution","code-summary":"Code","code-tools-menu-caption":"Code","code-tools-show-all-code":"Show All Code","code-tools-hide-all-code":"Hide All Code","code-tools-view-source":"View Source","code-tools-source-code":"Source Code","code-line":"Line","code-lines":"Lines","copy-button-tooltip":"Copy to Clipboard","copy-button-tooltip-success":"Copied!","repo-action-links-edit":"Edit this page","repo-action-links-source":"View source","repo-action-links-issue":"Report an issue","back-to-top":"Back to top","search-no-results-text":"No results","search-matching-documents-text":"matching documents","search-copy-link-title":"Copy link to search","search-hide-matches-text":"Hide additional matches","search-more-match-text":"more match in this document","search-more-matches-text":"more matches in this document","search-clear-button-title":"Clear","search-text-placeholder":"","search-detached-cancel-button-title":"Cancel","search-submit-button-title":"Submit","search-label":"Search","toggle-section":"Toggle section","toggle-sidebar":"Toggle sidebar navigation","toggle-dark-mode":"Toggle dark mode","toggle-reader-mode":"Toggle reader mode","toggle-navigation":"Toggle navigation","crossref-fig-title":"Figure","crossref-tbl-title":"Table","crossref-lst-title":"Listing","crossref-thm-title":"Theorem","crossref-lem-title":"Lemma","crossref-cor-title":"Corollary","crossref-prp-title":"Proposition","crossref-cnj-title":"Conjecture","crossref-def-title":"Definition","crossref-exm-title":"Example","crossref-exr-title":"Exercise","crossref-ch-prefix":"Chapter","crossref-apx-prefix":"Appendix","crossref-sec-prefix":"Section","crossref-eq-prefix":"Equation","crossref-lof-title":"List of Figures","crossref-lot-title":"List of Tables","crossref-lol-title":"List of Listings","environment-proof-title":"Proof","environment-remark-title":"Remark","environment-solution-title":"Solution","listing-page-order-by":"Order By","listing-page-order-by-default":"Default","listing-page-order-by-date-asc":"Oldest","listing-page-order-by-date-desc":"Newest","listing-page-order-by-number-desc":"High to Low","listing-page-order-by-number-asc":"Low to High","listing-page-field-date":"Date","listing-page-field-title":"Title","listing-page-field-description":"Description","listing-page-field-author":"Author","listing-page-field-filename":"File Name","listing-page-field-filemodified":"Modified","listing-page-field-subtitle":"Subtitle","listing-page-field-readingtime":"Reading Time","listing-page-field-wordcount":"Word Count","listing-page-field-categories":"Categories","listing-page-minutes-compact":"{0} min","listing-page-category-all":"All","listing-page-no-matches":"No matching items","listing-page-words":"{0} words"},"metadata":{"lang":"en","fig-responsive":true,"quarto-version":"1.4.533","theme":"cosmo","title":"**Quiz-1 (2024.09.05)** // 범위: 파이썬기본문법","author":"최규빈","date":"09/05/2024"},"extensions":{"book":{"multiFile":true}}}},"projectFormats":["html"]}